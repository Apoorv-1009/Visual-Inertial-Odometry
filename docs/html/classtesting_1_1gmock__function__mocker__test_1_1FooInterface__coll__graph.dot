digraph "testing::gmock_function_mocker_test::FooInterface"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{testing::gmock_function\l_mocker_test::FooInterface\n||+ ~FooInterface()\l+ VoidReturning()\l+ Nullary()\l+ Unary()\l+ Binary()\l+ Decimal()\l+ TakesNonConstReference()\l+ TakesConstReference()\l+ TakesConst()\l+ OverloadedOnArgumentNumber()\l+ OverloadedOnArgumentNumber()\l+ OverloadedOnArgumentType()\l+ OverloadedOnArgumentType()\l+ OverloadedOnConstness()\l+ OverloadedOnConstness()\l+ TypeWithHole()\l+ TypeWithComma()\l+ TypeWithTemplatedCopyCtor()\l+ ReturnsFunctionPointer2()\l+ RefQualifiedConstRef()\l+ RefQualifiedConstRefRef()\l+ RefQualifiedRef()\l+ RefQualifiedRefRef()\l+ RefQualifiedOverloaded()\l+ RefQualifiedOverloaded()\l+ RefQualifiedOverloaded()\l+ RefQualifiedOverloaded()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +ReturnsFunctionPointer1" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
}
