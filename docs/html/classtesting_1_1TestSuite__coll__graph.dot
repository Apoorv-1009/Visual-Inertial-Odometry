digraph "testing::TestSuite"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{testing::TestSuite\n||+ TestSuite()\l+ ~TestSuite()\l+ name()\l+ type_param()\l+ should_run()\l+ successful_test_count()\l+ skipped_test_count()\l+ failed_test_count()\l+ reportable_disabled\l_test_count()\l+ disabled_test_count()\l+ reportable_test_count()\l+ test_to_run_count()\l+ total_test_count()\l+ Passed()\l+ Failed()\l+ elapsed_time()\l+ start_timestamp()\l+ GetTestInfo()\l+ ad_hoc_test_result()\l- test_info_list()\l- test_info_list()\l- GetMutableTestInfo()\l- set_should_run()\l- AddTestInfo()\l- ClearResult()\l- Run()\l- Skip()\l- RunSetUpTestSuite()\l- RunTearDownTestSuite()\l- ShuffleTests()\l- UnshuffleTests()\l- TestSuite()\l- operator=()\l- ClearTestSuiteResult()\l- TestPassed()\l- TestSkipped()\l- TestFailed()\l- TestReportableDisabled()\l- TestDisabled()\l- TestReportable()\l- ShouldRunTest()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -ad_hoc_test_result_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{testing::TestResult\n||+ TestResult()\l+ ~TestResult()\l+ total_part_count()\l+ test_property_count()\l+ Passed()\l+ Skipped()\l+ Failed()\l+ HasFatalFailure()\l+ HasNonfatalFailure()\l+ elapsed_time()\l+ start_timestamp()\l+ GetTestPartResult()\l+ GetTestProperty()\l- test_part_results()\l- test_properties()\l- set_start_timestamp()\l- set_elapsed_time()\l- RecordProperty()\l- AddTestPartResult()\l- death_test_count()\l- increment_death_test\l_count()\l- ClearTestPartResults()\l- Clear()\l- TestResult()\l- operator=()\l- ValidateTestProperty()\l}",height=0.2,width=0.4,color="black",URL="$classtesting_1_1TestResult.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -test_properties_mutex_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{testing::internal::\lMutex\n||+ Mutex()\l+ Lock()\l+ Unlock()\l+ AssertHeld()\l}",height=0.2,width=0.4,color="black",URL="$classtesting_1_1internal_1_1Mutex.html",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -test_properties_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{std::vector\< testing\l::TestProperty \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{testing::TestProperty\n||+ TestProperty()\l+ key()\l+ value()\l+ SetValue()\l}",height=0.2,width=0.4,color="black",URL="$classtesting_1_1TestProperty.html",tooltip=" "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -key_\n-value_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< testing::TestProperty \>" ,fontname="Helvetica"];
  Node8 [label="{std::vector\< T \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{T\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -death_test_count_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{int\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -elapsed_time_\n-start_timestamp_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{TimeInMillis\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -test_part_results_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{std::vector\< TestPartResult \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{TestPartResult\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node12 [dir="back",color="orange",fontsize="10",style="solid",label=" \< TestPartResult \>" ,fontname="Helvetica"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -test_info_list_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{std::vector\< testing\l::TestInfo * \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{testing::TestInfo\n||+ ~TestInfo()\l+ test_suite_name()\l+ test_case_name()\l+ name()\l+ type_param()\l+ value_param()\l+ file()\l+ line()\l+ is_in_another_shard()\l+ should_run()\l+ is_reportable()\l+ result()\l- TestInfo()\l- increment_death_test\l_count()\l- Run()\l- Skip()\l- TestInfo()\l- operator=()\l- ClearTestResult()\l}",height=0.2,width=0.4,color="black",URL="$classtesting_1_1TestInfo.html",tooltip=" "];
  Node2 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -result_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -type_param_\n-value_param_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{std::unique_ptr\< const\l ::std::string \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node16 [dir="back",color="orange",fontsize="10",style="solid",label=" \< const ::std::string \>" ,fontname="Helvetica"];
  Node17 [label="{std::unique_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node17 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -factory_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{testing::internal::\lTestFactoryBase\n||+ ~TestFactoryBase()\l+ CreateTest()\l# TestFactoryBase()\l- TestFactoryBase()\l- operator=()\l}",height=0.2,width=0.4,color="black",URL="$classtesting_1_1internal_1_1TestFactoryBase.html",tooltip=" "];
  Node19 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -location_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{testing::internal::\lCodeLocation\n||+ CodeLocation()\l}",height=0.2,width=0.4,color="black",URL="$structtesting_1_1internal_1_1CodeLocation.html",tooltip=" "];
  Node10 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +line" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +file" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -is_disabled_\n-is_in_another_shard\l_\n-matches_filter\l_\n-should_run_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{bool\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -name_\n-test_suite_name_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -fixture_class_id_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{TypeId\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node14 [dir="back",color="orange",fontsize="10",style="solid",label=" \< testing::TestInfo * \>" ,fontname="Helvetica"];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -type_param_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -set_up_tc_\n-tear_down_tc_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{void(*)()\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -should_run_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -name_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -elapsed_time_\n-start_timestamp_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -test_indices_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{std::vector\< int \>\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node23 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node23 [dir="back",color="orange",fontsize="10",style="solid",label=" \< int \>" ,fontname="Helvetica"];
}
